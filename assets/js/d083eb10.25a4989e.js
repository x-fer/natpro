"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[578],{6084:(a,s,e)=>{e.r(s),e.d(s,{assets:()=>m,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var i=e(4848),n=e(8453),t=e(6749);e(9630);const r={title:"MST"},o=void 0,l={id:"algoritmi-nad-grafovima-1/mst",title:"MST",description:"Minimalno razapinju\u0107e stablo (MST)",source:"@site/docs/algoritmi-nad-grafovima-1/mst.md",sourceDirName:"algoritmi-nad-grafovima-1",slug:"/algoritmi-nad-grafovima-1/mst",permalink:"/docs/algoritmi-nad-grafovima-1/mst",draft:!1,unlisted:!1,editUrl:"https://github.com/x-fer/natpro/edit/main/docs/algoritmi-nad-grafovima-1/mst.md",tags:[],version:"current",frontMatter:{title:"MST"},sidebar:"materijaliSidebar",previous:{title:"Union-find struktura",permalink:"/docs/algoritmi-nad-grafovima-1/union-find-struktura"},next:{title:"Topolo\u0161ko sortiranje",permalink:"/docs/algoritmi-nad-grafovima-2/topolosko-sortiranje"}},m={},d=[{value:"Minimalno razapinju\u0107e stablo (MST)",id:"minimalno-razapinju\u0107e-stablo-mst",level:2},{value:"Kruskalov algoritam",id:"kruskalov-algoritam",level:2},{value:"Za\u0161to ovo radi?",id:"za\u0161to-ovo-radi",level:3},{value:"Implementacija",id:"implementacija",level:3}];function c(a){const s={annotation:"annotation",code:"code",div:"div",em:"em",h2:"h2",h3:"h3",math:"math",mi:"mi",mo:"mo",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",...(0,n.R)(),...a.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.A,{authorName:"Maja Milas",githubUsername:"javascript-m"}),"\n",(0,i.jsx)(s.h2,{id:"minimalno-razapinju\u0107e-stablo-mst",children:"Minimalno razapinju\u0107e stablo (MST)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Razapinju\u0107e stablo"})," nekog grafa je podgraf koji se sastoji od svih njegovih vrhova i nekih bridova tako da ",(0,i.jsx)(s.strong,{children:"postoji put izme\u0111u svaka dva vrha"}),". Kao i obi\u010dna stabla, razapinju\u0107a stabla su povezana i nemaju cikluse. MST je razapinju\u0107e stablo \u010diji je zbroj te\u017eina bridova minimalan."]}),"\n",(0,i.jsx)("img",{src:"/img/algoritmi-nad-grafovima-1/mst1.png",alt:"mst1",width:"600"}),"\n",(0,i.jsx)(s.p,{children:"Na slici lijevo prikazan je neki graf, a desno njegov MST. Sli\u010dnom logikom mo\u017eemo konstruirati i maksimalno razapinju\u0107e stablo (ima maksimalnu sumu te\u017eina bridova)."}),"\n",(0,i.jsx)(s.div,{children:(0,i.jsx)(s.p,{children:"Minimalno (maksimalno) razapinju\u0107e stablo ne mora biti jedinstven graf."})}),"\n",(0,i.jsx)(s.h2,{id:"kruskalov-algoritam",children:"Kruskalov algoritam"}),"\n",(0,i.jsxs)(s.p,{children:["Kruskalov je algoritam jedan u nizu algoritama koji ",(0,i.jsx)(s.strong,{children:"konstruiraju MST"}),". Na po\u010detku \u0107emo u graf dodati samo vrhove, a potom \u0107emo dodavati bridove po redu ",(0,i.jsx)(s.em,{children:"od manjih prema ve\u0107ima"}),". Algoritam dodaje brid u stablo ako dodavanjem tog brida ne nastaje ciklus. Kako bi to jednostavno provjeravali, koristit \u0107emo Union find strukturu."]}),"\n",(0,i.jsx)(s.p,{children:"Pogledajmo kako bi Kruskalov algoritam radio za graf s prethodne slike. Na po\u010detku u stablu imamo samo vrhove i svaki vrh \u010dini zaseban skup. Bridove smo sortirali po te\u017einama."}),"\n",(0,i.jsx)("img",{src:"/img/algoritmi-nad-grafovima-1/mst2.png",alt:"mst2",width:"500"}),"\n",(0,i.jsxs)(s.p,{children:["Prvo dodajemo brid 5-6 te skupove ",5," i ",6," spajamo funkcijom unite (lijevo). Nakon toga dodajemo bridove 1-2, 3-6 i 1-5 na sli\u010dan na\u010din spajamo odgovaraju\u0107e skupove (desno)."]}),"\n",(0,i.jsx)("img",{src:"/img/algoritmi-nad-grafovima-1/mst3.png",alt:"mst3",width:"600"}),"\n",(0,i.jsxs)(s.p,{children:["Sada u strukturi imamo 2 skupa: ",6," i ",4,". Sljede\u0107i brid na popisu je 2-3, ali njega ne\u0107emo dodavati jer su 2 i 3 unutar iste komponente (dodavanjem bi nastao ciklus). Sli\u010dno je i za brid 4-5. Na kraju dodamo brid 4-6 i gotovi smo (jej!)."]}),"\n",(0,i.jsx)("img",{src:"/img/algoritmi-nad-grafovima-1/mst4.png",alt:"mst4",width:"300"}),"\n",(0,i.jsx)(s.div,{children:(0,i.jsx)(s.p,{children:"Kruskalov algoritam spada u pohlepne algoritme."})}),"\n",(0,i.jsx)(s.h3,{id:"za\u0161to-ovo-radi",children:"Za\u0161to ovo radi?"}),"\n",(0,i.jsx)(s.p,{children:"Ovaj \u0107e algoritam uvijek u MST dodati najmanji brid, ali zamislimo da postoji situacija kada to nije rje\u0161enje. U na\u0161em bi primjeru to zna\u010dilo da postoji bolje razapinju\u0107e stablo koje ne sadr\u017eava brid 5-6. Me\u0111utim, ovo ne mo\u017ee biti rje\u0161enje zato \u0161to uvijek mo\u017eemo maknuti jedan brid iz takvog grafa i zamijeniti ga s bridom 5-6 \u0161to sigurno smanjuje rje\u0161enje (primjer na slici ispod). Sli\u010dnim razmi\u0161ljanjem mo\u017eemo obrazlo\u017eiti i dodavanje drugih bridova. Dakle, Kruskalov algoritam radi."}),"\n",(0,i.jsx)("img",{src:"/img/algoritmi-nad-grafovima-1/mst5.png",alt:"mst5",width:"600"}),"\n",(0,i.jsx)(s.h3,{id:"implementacija",children:"Implementacija"}),"\n",(0,i.jsxs)(s.p,{children:["Za implementaciju koristimo Union find strukturu i njezine funkcije iz pro\u0161le lekcije. Bridove \u0107emo dr\u017eati u listi ",(0,i.jsx)(s.code,{children:"vector<tuple<int, int, int>> edgeList"})," u kojoj je svaki brid izme\u0111u ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mi,{children:"a"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"a"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"a"})]})})]})," i ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mi,{children:"b"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"b"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6944em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"b"})]})})]})," te\u017eine ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mi,{children:"w"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"w"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02691em"},children:"w"})]})})]})," ",(0,i.jsx)(s.code,{children:"tuple"})," oblika (",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mi,{children:"w"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"w"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02691em"},children:"w"})]})})]}),", ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mi,{children:"a"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"a"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"a"})]})})]}),", ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mi,{children:"b"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"b"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6944em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"b"})]})})]}),"). Tu \u0107emo listu sortirati po te\u017einama kako bi se algoritam pravilno provodio."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-cpp",children:"vector<tuple<int, int, int>> mst;\nfor(auto &edge : edgeList) {\n    int a, b;\n    tie(ignore, a, b) = edge;\n\n    if(!same(a, b)) {\n        mst.push_back(edge);\n        unite(a, b);\n    }\n}\n"})}),"\n",(0,i.jsx)(s.div,{children:(0,i.jsxs)(s.p,{children:["Slo\u017eenost ovog algoritma je ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"O"}),(0,i.jsx)(s.mo,{stretchy:"false",children:"("}),(0,i.jsx)(s.mi,{children:"m"}),(0,i.jsx)(s.mi,{children:"log"}),(0,i.jsx)(s.mo,{children:"\u2061"}),(0,i.jsx)(s.mi,{children:"m"}),(0,i.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"O(m \\log m)"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,i.jsx)(s.span,{className:"mopen",children:"("}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"m"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsxs)(s.span,{className:"mop",children:["lo",(0,i.jsx)(s.span,{style:{marginRight:"0.01389em"},children:"g"})]}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"m"}),(0,i.jsx)(s.span,{className:"mclose",children:")"})]})})]})," zbog sortiranja, gdje je ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mi,{children:"m"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"m"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"m"})]})})]})," broj bridova."]})})]})}function h(a={}){const{wrapper:s}={...(0,n.R)(),...a.components};return s?(0,i.jsx)(s,{...a,children:(0,i.jsx)(c,{...a})}):c(a)}},6749:(a,s,e)=>{e.d(s,{A:()=>n});e(6540);var i=e(4848);const n=a=>{let{authorName:s,githubUsername:e}=a;return(0,i.jsxs)("div",{className:"author",children:["Autor: ",(0,i.jsx)("a",{target:"_blank",href:"https://github.com/"+e,children:s})]})}},8453:(a,s,e)=>{e.d(s,{R:()=>r,x:()=>o});var i=e(6540);const n={},t=i.createContext(n);function r(a){const s=i.useContext(t);return i.useMemo((function(){return"function"==typeof a?a(s):{...s,...a}}),[s,a])}function o(a){let s;return s=a.disableParentContext?"function"==typeof a.components?a.components(n):a.components||n:r(a.components),i.createElement(t.Provider,{value:s},a.children)}},9630:(a,s,e)=>{e.d(s,{A:()=>r});var i=e(6540),n=e(4848);const{useState:t}=i,r=a=>{let{text:s}=a;const[e,i]=t(!1);return(0,n.jsx)("span",{onClick:()=>i(!e),className:"react-spoiler-"+(e?"shown":"hidden"),children:s})}}}]);